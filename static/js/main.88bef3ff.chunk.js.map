{"version":3,"sources":["assets/icon-chat.png","assets/icon-money.png","assets/icon-security.png","components/indexcomponents/features.js","assets/bank-tree.jpeg","components/indexcomponents/hero.js","styles/indexstyles/featuresstyles.js","styles/indexstyles/herostyle.js","pages/indexpage.js","components/footer.js","styles/footerstyle.js","components/signincomponents/signincontent.js","styles/signinstyles/signincontentstyle.js","pages/signinpage.js","components/usercomponents/accounts.js","components/usercomponents/edituser.js","styles/userstyles/changenamestyle.js","components/usercomponents/user.js","styles/userstyles/accountsstyle.js","styles/userstyles/userstyle.js","pages/userpage.js","styles/page404style.js","components/error.js","services/redux/actions.js","assets/argentBankLogo.png","components/header.js","styles/headerstyle.js","app/App.js","reportWebVitals.js","styles/Appstyle.js","services/redux/reducers.ts","services/redux/initialstate.ts","services/redux/store.js","index.js"],"names":["Features","className","src","imgchat","alt","imgmoney","imgsecurity","Hero","Banktree","Featuresstyle","createGlobalStyle","Herostyle","Index","Footer","Footerstyle","connect","token","remember","dispatch","fetchedToken","inputName","useRef","inputPassword","inputRemember","navigate","useNavigate","console","log","JSON","stringify","localStorage","setItem","onSubmit","evt","htmlFor","type","id","name","ref","placeholder","value","Signincontentstyle","Signinpage","Accounts","firstName","fetchedEditName","isToggle","change","inputFirstnameChange","inputLastNameChange","useSelector","state","lastName","style","display","preventDefault","request","method","endPoints","body","current","onClick","Changenamestyle","user","fetchedUser","useState","isToggleBtn","setIsToggleBtn","setIsToggle","useEffect","Accountsstyle","Userstyle","Userpage","document","location","replace","Errorstyle","Error404","to","FETCH_TOKEN","LOGIN","LOGOUT","EDIT_NAME","logout","argentBankLogo","Headerstyle","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppStyle","initialState","email","userReducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","Appstyle","getElementById"],"mappings":"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","file":"static/js/main.88bef3ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-chat.e238539d.png\";","export default __webpack_public_path__ + \"static/media/icon-money.8ec88bb1.png\";","export default __webpack_public_path__ + \"static/media/icon-security.1c819fa1.png\";","import React from \"react\";\r\nimport imgchat from \"../../assets/icon-chat.png\";\r\nimport imgmoney from \"../../assets/icon-money.png\";\r\nimport imgsecurity from \"../../assets/icon-security.png\";\r\n\r\n/*Main content of the index page*/\r\nexport default function Features() {\r\n  return (\r\n    <section className=\"features\">\r\n      <h2 className=\"sr-only\">Features</h2>\r\n      <div className=\"feature-item\">\r\n        <img src={imgchat} alt=\"Chat Icon\" className=\"feature-icon\" />\r\n        <h3 className=\"feature-item-title\">You are our #1 priority</h3>\r\n        <p>\r\n          Need to talk to a representative? You can get in touch through our\r\n          24/7 chat or through a phone call in less than 5 minutes.\r\n        </p>\r\n      </div>\r\n      <div className=\"feature-item\">\r\n        <img src={imgmoney} alt=\"Chat Icon\" className=\"feature-icon\" />\r\n        <h3 className=\"feature-item-title\">More savings means higher rates</h3>\r\n        <p>\r\n          The more you save with us, the higher your interest rate will be!\r\n        </p>\r\n      </div>\r\n      <div className=\"feature-item\">\r\n        <img src={imgsecurity} alt=\"Chat Icon\" className=\"feature-icon\" />\r\n        <h3 className=\"feature-item-title\">Security you can trust</h3>\r\n        <p>\r\n          We use top of the line encryption to make sure your data and money\r\n          is always safe.\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bank-tree.4d59987c.jpeg\";","import React from 'react';\r\nimport Banktree from '../../assets/bank-tree.jpeg';\r\n\r\n/*First content of the index page*/\r\nexport default function Hero() {\r\n    return (\r\n        <div className=\"hero\">\r\n            <section className=\"hero-content\">\r\n                <h2 className=\"sr-only\">Promoted Content</h2>\r\n                <p className=\"subtitle\">No fees.</p>\r\n                <p className=\"subtitle\">No minimum deposit.</p>\r\n                <p className=\"subtitle\">High interest rates.</p>\r\n                <p className=\"text\">Open a savings account with Argent Bank today!</p>\r\n            </section>\r\n            <img src={Banktree} alt=\"background index\" className=\"background-index\" />\r\n        </div>\r\n    )\r\n}","import { createGlobalStyle } from \"styled-components\";\r\n\r\n/* Feature component's CSS*/\r\nconst Featuresstyle = createGlobalStyle`\r\n.features {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n@media (min-width: 920px) {\r\n  .features {\r\n    flex-direction: row;\r\n  }\r\n}\r\n\r\n.feature-icon {\r\n  width: 100px;\r\n  border: 10px solid #00bc77;\r\n  border-radius: 50%;\r\n  padding: 1rem;\r\n}\r\n\r\n.feature-item {\r\n  flex: 1;\r\n  padding: 2.5rem;\r\n}\r\n\r\n.feature-item-title {\r\n  color: #222;\r\n  font-size: 1.25rem;\r\n  font-weight: bold;\r\n  margin-bottom: 0.5rem;\r\n}\r\n`\r\n\r\nexport default Featuresstyle;","import { createGlobalStyle } from \"styled-components\";\r\n\r\n/* Hero component's CSS*/\r\nconst Herostyle = createGlobalStyle`\r\n.hero{\r\n  height: 300px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.background-index{\r\n    width: 100%;\r\n    position: absolute;\r\n    z-index: -1;\r\n    padding-top: 13%;\r\n} \r\n\r\n.hero-content {\r\n  position: relative;\r\n  top: 2rem;\r\n  width: 200px;\r\n  background: white;\r\n  padding: 2rem;\r\n  text-align: left;\r\n  margin: 0 auto;\r\n}\r\n\r\n.hero-content .subtitle {\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  margin: 0;\r\n}\r\n\r\n.hero-content .text {\r\n  margin-bottom: 0;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n@media (min-width: 920px) {\r\n  .hero {\r\n    height: 400px;\r\n    background-position: 0% 33%;\r\n  }\r\n\r\n  .hero-content {\r\n    position: absolute;\r\n    top: 50px;\r\n    right: 50px;\r\n    width: 300px;\r\n    margin: 2rem;\r\n  }\r\n\r\n  .hero-content .subtitle {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .hero-content .text {\r\n    font-size: 1.2rem;\r\n  }\r\n}\r\n`\r\n\r\nexport default Herostyle;","import React, { Fragment } from 'react';\r\nimport Features from '../components/indexcomponents/features';\r\nimport Hero from '../components/indexcomponents/hero';\r\nimport Featuresstyle from '../styles/indexstyles/featuresstyles';\r\nimport Herostyle from '../styles/indexstyles/herostyle';\r\n\r\n/*Index page which contains index components*/\r\nexport default function Index() {\r\n\r\n    return (\r\n        <Fragment>\r\n            <main>\r\n                <Hero /><Herostyle />\r\n                <Features /><Featuresstyle />\r\n            </main>\r\n        </Fragment>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer-text\">Copyright 2021 Argent Bank</p>\r\n        </footer>\r\n    )\r\n}","import { createGlobalStyle } from \"styled-components\";\r\n\r\n\r\n/* Footer component's CSS*/\r\nconst Footerstyle = createGlobalStyle`\r\n@media (min-width: 920px) {\r\n    .footer {\r\n  display: flex;\r\n  justify-content: center;\r\n  border-top: 2px solid #ccc;\r\n  padding: 2rem 0 1.5rem;\r\n}\r\n\r\n.footer-text {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n}\r\n`\r\n\r\nexport default Footerstyle;","import { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\n/* import { fetchedToken } from '../../services/redux/fetch/fetchedtoken'; */\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n/*Signin component*/\r\nconst Signin = ({ token, fetchedToken, remember }) => {\r\n    const inputName = useRef(null);\r\n    const inputPassword = useRef(null);\r\n    const inputRemember = useRef(null);\r\n    const navigate = useNavigate()\r\n\r\n    /*On signin submit, the token will be got by the fetch*/\r\n    const handleSubmit = (evt) => {\r\n        /* evt.preventDefault();\r\n        const request = {\r\n            method: 'POST',\r\n            endPoints: 'login',\r\n            body: {\r\n                email: inputName.current.value,\r\n                password: inputPassword.current.value,\r\n            },\r\n            remember: inputRemember.current.checked,\r\n        };\r\n\r\n        fetchedToken(request); */\r\n        console.log(\"Le Submit ne mene plus à rien, le serveur n'étant plus accessible, je ne peux soumettre de requetes pour le token\")\r\n    };\r\n    if (token) {\r\n        /*If remember checked, store the token in local storage*/\r\n        if (remember) {\r\n            console.log(\r\n                'Stockage dans le local storage',\r\n                JSON.stringify(token)\r\n            );\r\n            localStorage.setItem('token', token);\r\n        }\r\n        navigate('/argentbank/user')\r\n    }\r\n    return (\r\n        <main className=\"main bg-dark\">\r\n            <section className=\"sign-in-content\">\r\n                <i className=\"fa fa-user-circle sign-in-icon\"></i>\r\n                <h1>Sign In</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"input-wrapper\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            name=\"email\"\r\n                            ref={inputName}\r\n                            placeholder=\"Email\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-wrapper\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            ref={inputPassword}\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-remember\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"remember-me\"\r\n                            ref={inputRemember}\r\n                        />\r\n                        <label htmlFor=\"remember-me\">Remember me</label>\r\n                    </div>\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"sign-in-button\"\r\n                        value=\"Sign In\"\r\n                    />\r\n\r\n                </form>\r\n            </section>\r\n        </main>\r\n    );\r\n};\r\n\r\n/*Inject any updates to the redux store and merge them into props in componants*/\r\nconst mapStateToProps = ({ token, remember }) => {\r\n    return {\r\n        token,\r\n        remember,\r\n    };\r\n};\r\n/*Inject actions to the store*/\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        /*         fetchedToken: (...args) => dispatch(fetchedToken(...args)), */\r\n    };\r\n};\r\n/*Connect provides its connected component with the pieces of the data it needs from the store */\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\n/* Signin component's CSS*/\r\nconst Signincontentstyle = createGlobalStyle`\r\n.bg-dark {\r\n  padding-top: 0.1%;\r\n  padding-bottom: 6.8%;\r\n}\r\n\r\n@media (min-width: 920px) {\r\n    .sign-in-button {\r\n    display: block;\r\n    width: 100%;\r\n    padding: 8px;\r\n    font-size: 1.1rem;\r\n    font-weight: bold;\r\n    margin-top: 1rem;\r\n    border-color: #00bc77;\r\n    background-color: #00bc77;\r\n    color: #fff;\r\n  }\r\n\r\n  .sign-in-content {\r\n    box-sizing: border-box;\r\n    background-color: white;\r\n    width: 300px;\r\n    margin: 0 auto;\r\n    margin-top: 3rem;\r\n    padding: 2rem;\r\n  }\r\n\r\n  .sign-in-icon {\r\n    font:normal normal normal 14px/1 FontAwesome;\r\n  color: #2c3e50;\r\n  }\r\n\r\n  .input-remember {\r\n    display: flex;\r\n  }\r\n\r\n  .input-remember label {\r\n    margin-left: 0.25rem;\r\n  }\r\n\r\n  .input-wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: left;\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  .input-wrapper label {\r\n    font-weight: bold;\r\n  }\r\n\r\n  .input-wrapper input {\r\n    padding: 5px;\r\n    font-size: 1.2rem;\r\n  }\r\n}\r\n@media (max-width: 919px) {\r\n  \r\n  .sign-in-content {\r\n  box-sizing: border-box;\r\n  background-color: white;\r\n  width: 40%;\r\n  margin: 0 auto;\r\n  margin-top: 3rem;\r\n  padding: 2rem;\r\n  }\r\n\r\n  .sign-in-button {\r\n    display: block;\r\n    width: 100%;\r\n    padding: 8px;\r\n    font-size: 1.1rem;\r\n    font-weight: bold;\r\n    margin-top: 1rem;\r\n    border-color: #00bc77;\r\n    background-color: #00bc77;\r\n    color: #fff;\r\n  }\r\n\r\n  .input-wrapper{\r\n    margin: 3%;\r\n  }\r\n\r\n  .input-wrapper label {\r\n    font-weight: bold;\r\n    margin-right: 2%;\r\n  }\r\n\r\n}\r\n\r\n`\r\n\r\nexport default Signincontentstyle;","import React, { Fragment } from 'react';\r\nimport Signin from '../components/signincomponents/signincontent';\r\nimport Signincontentstyle from '../styles/signinstyles/signincontentstyle';\r\n\r\n\r\n/*Login page which contains sigin component*/\r\nexport default function Signinpage() {\r\n\r\n    return (\r\n        <Fragment>\r\n            <Signin /><Signincontentstyle />\r\n        </Fragment>\r\n    )\r\n}","import React, { Fragment } from \"react\";\r\n\r\n\r\n/*Account component*/\r\nexport default function Accounts() {\r\n  return (\r\n    <Fragment>\r\n      <section className=\"account\">\r\n        <div className=\"account-content-wrapper\">\r\n          <h3 className=\"account-title\">Argent Bank Checking (x8349)</h3>\r\n          <p className=\"account-amount\">$2,082.79</p>\r\n          <p className=\"account-amount-description\">Available Balance</p>\r\n        </div>\r\n        <div className=\"account-content-wrapper cta\">\r\n          <button className=\"transaction-button\">View transactions</button>\r\n        </div>\r\n      </section>\r\n      <section className=\"account\">\r\n        <div className=\"account-content-wrapper\">\r\n          <h3 className=\"account-title\">Argent Bank Savings (x6712)</h3>\r\n          <p className=\"account-amount\">$10,928.42</p>\r\n          <p className=\"account-amount-description\">Available Balance</p>\r\n        </div>\r\n        <div className=\"account-content-wrapper cta\">\r\n          <button className=\"transaction-button\">View transactions</button>\r\n        </div>\r\n      </section>\r\n      <section className=\"account\">\r\n        <div className=\"account-content-wrapper\">\r\n          <h3 className=\"account-title\">Argent Bank Credit Card (x8349)</h3>\r\n          <p className=\"account-amount\">$184.30</p>\r\n          <p className=\"account-amount-description\">Current Balance</p>\r\n        </div>\r\n        <div className=\"account-content-wrapper cta\">\r\n          <button className=\"transaction-button\">View transactions</button>\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n}","import { useRef } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { fetchedEditName } from '../../services/redux/fetch/fetcheditname';\r\n\r\n\r\n/* Edit name component*/\r\nconst EditUserName = ({ token, fetchedEditName, isToggle, change }) => {\r\n    const inputFirstnameChange = useRef();\r\n    const inputLastNameChange = useRef();\r\n    const firstName = useSelector((state) => state.firstName);\r\n    const lastName = useSelector((state) => state.lastName);\r\n\r\n    /*On edit submit, names will be fetched and updated*/\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        const request = {\r\n            method: 'PUT',\r\n            endPoints: 'profile',\r\n            body: {\r\n                firstName: inputFirstnameChange.current.value,\r\n                lastName: inputLastNameChange.current.value,\r\n            },\r\n            token,\r\n        };\r\n        fetchedEditName(request);\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: isToggle ? 'flex' : 'none' }} className=\"changenameform\">\r\n            <form\r\n                onSubmit={handleSubmit}\r\n                className=\"form\"\r\n            >\r\n                <div className=\"input-wrapper\">\r\n                    <label htmlFor=\"Firstname\">\r\n                        <input\r\n                            className=\"inputchangename\"\r\n                            type=\"text\"\r\n                            id=\"Firstname\"\r\n                            placeholder={firstName}\r\n                            ref={inputFirstnameChange}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"input-wrapper\">\r\n                    <label htmlFor=\"Lastname\">\r\n                        <input\r\n                            className=\"inputchangename\"\r\n                            type=\"text\"\r\n                            id=\"Lastname\"\r\n                            placeholder={lastName}\r\n                            ref={inputLastNameChange}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"edit_buttons\">\r\n                    <button className=\"savebutton\" type=\"submit\" onClick={change}>\r\n                        Save\r\n                    </button>\r\n\r\n                </div>\r\n            </form>\r\n            <button\r\n                className=\"cancelbutton\"\r\n                type=\"cancel\"\r\n                onClick={change}\r\n            >\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\n/*Inject any updates to the redux store and merge them into props in componants*/\r\nconst mapStateToProps = ({ token, firstName }) => {\r\n    return {\r\n        token,\r\n        firstName,\r\n    };\r\n};\r\n\r\n/*Inject actions to the store*/\r\nconst mapDispatchToprops = (dispatch) => {\r\n    return {\r\n        fetchedEditName: (...args) => dispatch(fetchedEditName(...args)),\r\n    };\r\n};\r\n\r\n/*Connect provides its connected component with the pieces of the data it needs from the store */\r\nexport default connect(mapStateToProps, mapDispatchToprops)(EditUserName);\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\n/* EditUsername component's CSS*/\r\nconst Changenamestyle = createGlobalStyle`\r\n.changenameform{\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    width: 40%;\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    padding-bottom: 3%;\r\n}\r\n\r\n.form{\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n}\r\n\r\n.input-wrapper{\r\n    width: 45%;\r\n    margin-bottom: 3%;\r\n    height: 4vh;\r\n}\r\n\r\nlabel, input{\r\n    width: 90%;\r\n    border-radius: 5px;\r\n    height: 90%;\r\n    margin: 0 auto;\r\n}\r\n\r\n\r\n.edit_buttons{\r\n    display: flex;\r\n    flex-direction: row;\r\n    justiify-content: space-between;\r\n    width: 75px;\r\n\r\n}\r\n\r\n.savebutton, .cancelbutton{\r\n    color: #5256ec;\r\n    border: solid 1px #5256ec;\r\n    border-radius: 3px;\r\n    height: 3.5vh;\r\n}\r\n\r\n.savebutton{\r\n    width: 100%;\r\n    margin-top: 2%;\r\n}\r\n\r\n.cancelbutton{\r\n    width: 75px;\r\n    margin: 0 auto;\r\n    margin-top: 2%;\r\n}\r\n\r\n.hidden{\r\n  display:none;\r\n}\r\n\r\n@media (max-width: 919px) {\r\n    .changenameform{\r\n        width: 100%;\r\n    }\r\n\r\n    .input-wrapper{\r\n        width: 30%;\r\n        height: 2vh;\r\n    }\r\n\r\n    label, input{\r\n        height: 100%;\r\n        width: 60%;\r\n    }\r\n\r\n    .savebutton{\r\n    width: 100%;\r\n    margin-top: 2%;\r\n}\r\n\r\n.cancelbutton{\r\n    width: 75px;\r\n    margin: 0 auto;\r\n    margin-top: 3%;\r\n}\r\n.form{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n flex-wrap: nowrap;\r\n align-items: center;\r\n}\r\n}\r\n`\r\n\r\nexport default Changenamestyle;","import { connect, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { fetchedUser } from '../../services/redux/fetch/fetcheduser';\r\nimport EditUserName from './edituser';\r\nimport Changenamestyle from '../../styles/userstyles/changenamestyle';\r\n\r\n/* User component, render name's content and upload it*/\r\nconst User = ({ token, fetchedUser }) => {\r\n    const [isToggleBtn, setIsToggleBtn] = useState(true);\r\n    const [isToggle, setIsToggle] = useState(false);\r\n    const firstName = useSelector((state) => state.firstName);\r\n    const lastName = useSelector((state) => state.lastName)\r\n\r\n    /* UseEffect will fetch and recover names for each render of the component*/\r\n    useEffect(() => {\r\n        if (token) {\r\n            const request = {\r\n                method: 'POST',\r\n                endPoints: 'profile',\r\n                token: token,\r\n                body: {\r\n                    firstName,\r\n                    lastName\r\n                }\r\n            };\r\n\r\n            fetchedUser(request);\r\n        }\r\n    }, [fetchedUser, token, firstName, lastName]);\r\n    /* Toggle the user component with the edit name component*/\r\n    const change = () => {\r\n        setIsToggleBtn(!isToggleBtn);\r\n        setIsToggle(!isToggle);\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <h1>Welcome back</h1>\r\n                <div style={{ display: isToggleBtn ? 'flex' : 'none' }}>\r\n                    <h2>\r\n                        {firstName}&nbsp;{lastName}\r\n                    </h2>\r\n                </div>\r\n                <button\r\n                    onClick={() => change()}\r\n                    className=\"edit-button\"\r\n                    style={{ display: isToggleBtn ? 'flex' : 'none' }}\r\n                >\r\n                    Edit Name{' '}\r\n                </button>\r\n            </div>\r\n\r\n            <EditUserName token={token} change={change} isToggle={isToggle} />\r\n            <Changenamestyle />\r\n        </>\r\n    );\r\n};\r\n\r\n/*Inject any updates to the redux store and merge them into props in componants*/\r\nconst mapStateToProps = ({ token, firstName, lastName, user }) => {\r\n    return {\r\n        user,\r\n        token,\r\n        firstName,\r\n        lastName,\r\n    };\r\n};\r\n\r\n/*Inject actions to the store*/\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchedUser: (...args) => dispatch(fetchedUser(...args)),\r\n    };\r\n};\r\n\r\n/*Connect provides its connected component with the pieces of the data it needs from the store */\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\n/* Account component's CSS*/\r\nconst Accountsstyle = createGlobalStyle`\r\n.bg-dark {\r\n  padding-top: 0.1%;\r\n  padding-bottom: 0.1%;\r\n}\r\n\r\n    .transaction-button {\r\n    display: block;\r\n    width: 100%;\r\n    padding: 8px;\r\n    font-size: 1.1rem;\r\n    font-weight: bold;\r\n    margin-top: 1rem;\r\n    border-color: #00bc77;\r\n    background-color: #00bc77;\r\n    color: #fff;\r\n  }\r\n\r\n  .account {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: 1px solid black;\r\n    background-color: #fff;\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    flex-direction: column;\r\n    padding: 1.5rem;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n@media (min-width: 920px) {\r\n  \r\n\r\n  \r\n  \r\n  .account-amount {\r\n    margin: 0;\r\n    font-size: 2.5rem;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .account-amount-description {\r\n    margin: 0;\r\n  }\r\n  \r\n  .account-title {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: 1rem;\r\n    font-weight: normal;\r\n  }\r\n  \r\n  .account-content-wrapper {\r\n    width: 100%;\r\n    flex: 1;\r\n  }\r\n\r\n  .transaction-button {\r\n      width: 200px;\r\n    }\r\n\r\n    .account {\r\n      flex-direction: row;\r\n    }\r\n  \r\n    .account-content-wrapper.cta {\r\n      flex: 0;\r\n    }\r\n}\r\n  \r\n  @media (max-width: 919px) {\r\n    .account {\r\n      flex-direction: row;\r\n    }\r\n  \r\n    .account-content-wrapper.cta {\r\n      flex: 0;\r\n    }\r\n  \r\n    .transaction-button {\r\n      width: 200px;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  \r\n  \r\n`\r\n\r\nexport default Accountsstyle;","import { createGlobalStyle } from \"styled-components\";\r\n\r\n/* User component's CSS*/\r\nconst Userstyle = createGlobalStyle`\r\n.header {\r\n  color: #fff;\r\n  margin-bottom: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.header>h1{\r\n  margin: 0 auto;\r\n  padding-top: 1%;\r\n  padding-right: 2.5%;\r\n}\r\n\r\n.edit-button {\r\n      border-color: #00bc77;\r\n  background-color: #00bc77;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  padding: 10px;\r\ntext-decoration: none;\r\nfont-size: 13px;\r\npadding: 12px 8px 12px 8px;\r\n\r\n}\r\n\r\n.main-nav {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px 20px;\r\n}\r\n\r\n.main-nav a {\r\n  font-weight: bold;\r\n  color: #2c3e50;\r\n}\r\n\r\n.main-nav a.router-link-exact-active {\r\n  color: #42b983;\r\n}\r\n\r\n.main-nav-item {\r\n  text-decoration: none;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.main-nav-item:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.main-nav-logo {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.main-nav-logo-image {\r\n  max-width: 100%;\r\n  width: 200px;\r\n}\r\n`\r\n\r\nexport default Userstyle;","import { useEffect } from \"react\";\r\nimport Accounts from \"../components/usercomponents/accounts\";\r\nimport User from \"../components/usercomponents/user\";\r\nimport Accountsstyle from \"../styles/userstyles/accountsstyle\";\r\nimport Userstyle from \"../styles/userstyles/userstyle\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/*user page which contains usercontent and accounts component*/\r\nexport default function Userpage() {\r\n  const token = useSelector((state) => state.token);\r\n  /*Redirect the user if he didn't login, so don't fetch the token*/\r\n  useEffect(() => {\r\n    if (token === \"\") document.location.replace('/')\r\n  })\r\n\r\n  return (\r\n    <main className=\"main bg-dark\">\r\n      {(token === \"\") ? (null) : <><User /><Userstyle /><Accounts /><Accountsstyle /></>}\r\n    </main>\r\n  );\r\n}","import { createGlobalStyle } from \"styled-components\";\r\n\r\n/* 404 component's CSS*/\r\nconst Errorstyle = createGlobalStyle`\r\nmain {\r\n  justify-content: center;\r\n}\r\n\r\n.error {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: red;\r\n  text-align: center;\r\n  height: 60vh;\r\n  margin-bottom: 13%;\r\n}\r\n\r\n.error-message {\r\n  font-size: x-large;\r\n  height: 50%;\r\n}\r\n\r\n.error-back {\r\n  margin-top: 5%;\r\n  text-decoration: none;\r\n}\r\n`\r\n\r\nexport default Errorstyle;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Errorstyle from '../styles/page404style.js';\r\n\r\n\r\n/*404 error component*/\r\nexport default function Error404() {\r\n    return (\r\n        <main className=\"error\">\r\n            <div className=\"error-content\">\r\n                <p className=\"error-number\">\r\n                    404\r\n                </p>\r\n                <p className=\"error-message\">\r\n                    La page que vous demandez n'existe pas.\r\n                </p>\r\n            </div>\r\n            <Link className=\"nav-link error-back\" to=\"/\">\r\n                Retourner à la page d'accueil\r\n            </Link>\r\n            <Errorstyle />\r\n        </main>\r\n    );\r\n}","export const FETCH_TOKEN = 'FETCH_TOKEN';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const EDIT_NAME = 'EDIT_NAME';\r\n\r\n\r\n/*Login redux action*/\r\nexport const login = (user) => {\r\n    return {\r\n        type: LOGIN,\r\n        firstName: user.body.firstName,\r\n        lastName: user.body.lastName,\r\n        email: user.body.email,\r\n\r\n    };\r\n};\r\n/*recover token redux action*/\r\nexport const fetchToken = (token) => {\r\n    return {\r\n        type: FETCH_TOKEN,\r\n        token: token.body.token,\r\n        remember: token.body.remember,\r\n    };\r\n};\r\n/*Logout redux action*/\r\nexport const logout = () => {\r\n    return {\r\n        type: LOGOUT,\r\n        user: '',\r\n        token: '',\r\n    };\r\n};\r\n/*Edit name redux action*/\r\nexport const editName = (user) => {\r\n    return {\r\n        type: EDIT_NAME,\r\n        firstName: user.body.firstName,\r\n        lastName: user.body.lastName,\r\n    };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/argentBankLogo.e031a16c.png\";","import { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { LOGOUT } from '../services/redux/actions';\r\nimport argentBankLogo from '../assets/argentBankLogo.png';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n/*Header component, If token is in to the store, header change and pin the firstName*/\r\nconst Header = ({ token, logout }) => {\r\n    const firstName = useSelector((state) => state.firstName);\r\n    return (\r\n        <nav className=\"main-nav\">\r\n            <Link className=\"main-nav-logo\" to=\"/argentbank\">\r\n                <img\r\n                    className=\"main-nav-logo-image\"\r\n                    src={argentBankLogo}\r\n                    alt=\"Argent Bank Logo\"\r\n                />\r\n                <h1 className=\"sr-only\">Argent Bank</h1>\r\n            </Link>\r\n            <div>\r\n                {token ? (\r\n                    <>\r\n                        <Link className=\"main-nav-item\" to=\"/argentbank/user\">\r\n                            <i className=\"fa fa-user-circle\"></i>\r\n                            {firstName}\r\n                        </Link>\r\n                        <Link\r\n                            className=\"main-nav-item\"\r\n                            to=\"/\"\r\n                            onClick={() => logout()}\r\n                        >\r\n                            <i className=\"fa fa-sign-out\"></i>\r\n                            Log Out\r\n                        </Link>\r\n                    </>\r\n                ) : (\r\n                    <Link to=\"argentbank/login\" className=\"main-nav-item\">\r\n                        <i className=\"fa fa-user-circle\"></i>\r\n                        Log In\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\n/*Inject any updates to the redux store and merge them into props in componants*/\r\nconst mapStateToProps = ({ token, firstName }) => {\r\n    return {\r\n        token,\r\n        firstName,\r\n    };\r\n};\r\n\r\n/*Inject actions to the store*/\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => dispatch({ type: LOGOUT }),\r\n    };\r\n};\r\n\r\n/*Connect provides its connected component with the pieces of the data it needs from the store */\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\n/* Header component's CSS*/\r\nconst Headerstyle = createGlobalStyle`\r\n.main-nav {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px 20px;\r\n}\r\n\r\n.main-nav a {\r\n  font-weight: bold;\r\n  color: #2c3e50;\r\n}\r\n\r\n.main-nav a.router-link-exact-active {\r\n  color: #42b983;\r\n}\r\n\r\n.main-nav-item {\r\n  text-decoration: none;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.main-nav-item:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.main-nav-logo {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.main-nav-logo-image {\r\n  max-width: 100%;\r\n  width: 200px;\r\n}\r\n`\r\n\r\nexport default Headerstyle;","import { Routes, Route } from 'react-router-dom';\r\nimport Index from '../pages/indexpage';\r\nimport Footer from '../components/footer';\r\nimport Footerstyle from '../styles/footerstyle';\r\nimport Signinpage from '../pages/signinpage';\r\nimport Userpage from '../pages/userpage';\r\nimport Error404 from '../components/error';\r\nimport Header from '../components/header';\r\nimport Headerstyle from '../styles/headerstyle';\r\n\r\n/*Create routes for differents pages of the site*/\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Headerstyle />\r\n            <Routes>\r\n                <Route exact path=\"/argentbank\" element={<Index />} />\r\n                <Route path=\"/argentbank/login\" element={<Signinpage />} />\r\n                <Route path=\"/argentbank/user\" element={<Userpage />} />\r\n                <Route path=\"/argentbank/*\" element={<Error404 />} />\r\n            </Routes>\r\n            <Footer />\r\n            <Footerstyle />\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\n\n/* App component's CSS*/\nconst AppStyle = createGlobalStyle`\nhtml {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nbody {\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.main {\n  flex: 1;\n}\n\n.bg-dark {\n  background-color: #12002b;\n}\n\n.sr-only {\n  border: 0 !important;\n  clip: rect(1px, 1px, 1px, 1px) !important; /* 1 */\n  -webkit-clip-path: inset(50%) !important;\n  clip-path: inset(50%) !important; /* 2 */\n  height: 1px !important;\n  margin: -1px !important;\n  overflow: hidden !important;\n  padding: 0 !important;\n  position: absolute !important;\n  width: 1px !important;\n  white-space: nowrap !important; /* 3 */\n}`\n\nexport default AppStyle;","import { initialStateAuthentification, initialStateUser } from \"./initialstate\";\r\nimport { FETCH_TOKEN } from \"./actions\";\r\nimport { LOGIN } from \"./actions\";\r\nimport { LOGOUT } from \"./actions\";\r\nimport { EDIT_NAME } from \"./actions\";\r\n\r\nconst initialState = { ...initialStateUser, ...initialStateAuthentification };\r\n\r\n/*store redux actions, and previous states, and returns new states*/\r\nconst userReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case FETCH_TOKEN: {\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n        remember: action.remember,\r\n      };\r\n    }\r\n    case LOGIN: {\r\n      return {\r\n        ...state,\r\n        firstName: action.firstName,\r\n        lastName: action.lastName,\r\n        email: action.email,\r\n      };\r\n    }\r\n    case LOGOUT: {\r\n      return initialState;\r\n    }\r\n\r\n    case EDIT_NAME: {\r\n      return {\r\n        ...state,\r\n        firstName: action.firstName,\r\n        lastName: action.lastName,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","/*Initial state for the signin*/\r\nexport const initialStateAuthentification = {\r\n  email: \"\",\r\n  token: \"\",\r\n  remember: \"\",\r\n};\r\n\r\n/*Initial state for the users' names recover*/\r\nexport const initialStateUser = {\r\n  email: \"\",\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport userReducer from \"./reducers\";\r\n\r\n/*Create store which brings together state, actions, and reducers*/\r\nconst store = createStore(\r\n    userReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport Appstyle from './styles/Appstyle.js';\nimport { Provider } from 'react-redux';\nimport store from './services/redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n\n/*React render of the Website*/\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter >\n                <App />\n                <Appstyle />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}